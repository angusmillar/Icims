
The following article was followed to setup the base infrastructure to run a .NET Core Web API as a Windows Service 
https://gunnarpeipman.com/aspnet/aspnet-core-windows-service/

Note: The project file had to be manually edited to add the element: <RuntimeIdentifier>win7-x64</RuntimeIdentifier> 
So that file named 'Icims.Api.csproj' looks like this:
---------------------------------------------------------------
<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>
    <RuntimeIdentifier>win7-x64</RuntimeIdentifier>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Hosting.WindowsServices" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
  </ItemGroup>

</Project>
---------------------------------------------------------------

*** Making application run as Windows service ***
To make application run as Windows service.

1. Publish application to some folder
2. Open command line in administrative permissions
3. Register application as Windows service using command (space after “binPath=“ is mandatory)

sc create Icims binPath= “path to my application exe”
 
For example:
sc create Icims binPath= “C:\IcimsApplication\Icims.Api.exe”

Start service
 
sc start AspNetWindowsService
or 
use the Windows Service tool
 
When service starts open browser and navigate to http://localhost:5000/api/hl7v2 to see that the web application running.

Before releasing new version of service the current running instance must be stopped. 
For this we can use command sc stop AspNetWindowsService or the Windows Service tool. 

To remove service run the following command: sc delete Icims.
